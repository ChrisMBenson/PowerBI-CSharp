// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for DeploymentExecutionStepPreDeploymentDiffState.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(DeploymentExecutionStepPreDeploymentDiffStateConverter))]
    public struct DeploymentExecutionStepPreDeploymentDiffState : System.IEquatable<DeploymentExecutionStepPreDeploymentDiffState>
    {
        private DeploymentExecutionStepPreDeploymentDiffState(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// A new deployed item that doesn't exist in the target stage.
        /// </summary>
        public static readonly DeploymentExecutionStepPreDeploymentDiffState New = "New";

        /// <summary>
        /// Before deployment, the item in the source stage wasn't identical to
        /// the one in the target stage.
        /// </summary>
        public static readonly DeploymentExecutionStepPreDeploymentDiffState Different = "Different";

        /// <summary>
        /// Before deployment, the item in the source stage was identical to
        /// the one in the target stage.
        /// </summary>
        public static readonly DeploymentExecutionStepPreDeploymentDiffState NoDifference = "NoDifference";


        /// <summary>
        /// Underlying value of enum
        /// DeploymentExecutionStepPreDeploymentDiffState
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for
        /// DeploymentExecutionStepPreDeploymentDiffState
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type
        /// DeploymentExecutionStepPreDeploymentDiffState
        /// </summary>
        public bool Equals(DeploymentExecutionStepPreDeploymentDiffState e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to
        /// DeploymentExecutionStepPreDeploymentDiffState
        /// </summary>
        public static implicit operator DeploymentExecutionStepPreDeploymentDiffState(string value)
        {
            return new DeploymentExecutionStepPreDeploymentDiffState(value);
        }

        /// <summary>
        /// Implicit operator to convert
        /// DeploymentExecutionStepPreDeploymentDiffState to string
        /// </summary>
        public static implicit operator string(DeploymentExecutionStepPreDeploymentDiffState e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum
        /// DeploymentExecutionStepPreDeploymentDiffState
        /// </summary>
        public static bool operator == (DeploymentExecutionStepPreDeploymentDiffState e1, DeploymentExecutionStepPreDeploymentDiffState e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum
        /// DeploymentExecutionStepPreDeploymentDiffState
        /// </summary>
        public static bool operator != (DeploymentExecutionStepPreDeploymentDiffState e1, DeploymentExecutionStepPreDeploymentDiffState e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for
        /// DeploymentExecutionStepPreDeploymentDiffState
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is DeploymentExecutionStepPreDeploymentDiffState && Equals((DeploymentExecutionStepPreDeploymentDiffState)obj);
        }

        /// <summary>
        /// Returns for hashCode DeploymentExecutionStepPreDeploymentDiffState
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
