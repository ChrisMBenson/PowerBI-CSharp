// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ArtifactType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ArtifactType
    {
        /// <summary>
        /// Power BI Report
        /// </summary>
        [EnumMember(Value = "Report")]
        Report,
        /// <summary>
        /// Power BI Paginated Report
        /// </summary>
        [EnumMember(Value = "PaginatedReport")]
        PaginatedReport,
        /// <summary>
        /// Power BI Dashboard
        /// </summary>
        [EnumMember(Value = "Dashboard")]
        Dashboard,
        /// <summary>
        /// Power BI Dataset
        /// </summary>
        [EnumMember(Value = "Dataset")]
        Dataset,
        /// <summary>
        /// Power BI Dataflow
        /// </summary>
        [EnumMember(Value = "Dataflow")]
        Dataflow,
        /// <summary>
        /// My workspace object
        /// </summary>
        [EnumMember(Value = "PersonalGroup")]
        PersonalGroup,
        /// <summary>
        /// V1 shared workspace object
        /// </summary>
        [EnumMember(Value = "Group")]
        Group,
        /// <summary>
        /// Shared workspace object
        /// </summary>
        [EnumMember(Value = "Workspace")]
        Workspace,
        /// <summary>
        /// Capacity object
        /// </summary>
        [EnumMember(Value = "Capacity")]
        Capacity,
        /// <summary>
        /// Power BI Apps
        /// </summary>
        [EnumMember(Value = "App")]
        App
    }
    internal static class ArtifactTypeEnumExtension
    {
        internal static string ToSerializedValue(this ArtifactType? value)
        {
            return value == null ? null : ((ArtifactType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ArtifactType value)
        {
            switch( value )
            {
                case ArtifactType.Report:
                    return "Report";
                case ArtifactType.PaginatedReport:
                    return "PaginatedReport";
                case ArtifactType.Dashboard:
                    return "Dashboard";
                case ArtifactType.Dataset:
                    return "Dataset";
                case ArtifactType.Dataflow:
                    return "Dataflow";
                case ArtifactType.PersonalGroup:
                    return "PersonalGroup";
                case ArtifactType.Group:
                    return "Group";
                case ArtifactType.Workspace:
                    return "Workspace";
                case ArtifactType.Capacity:
                    return "Capacity";
                case ArtifactType.App:
                    return "App";
            }
            return null;
        }

        internal static ArtifactType? ParseArtifactType(this string value)
        {
            switch( value )
            {
                case "Report":
                    return ArtifactType.Report;
                case "PaginatedReport":
                    return ArtifactType.PaginatedReport;
                case "Dashboard":
                    return ArtifactType.Dashboard;
                case "Dataset":
                    return ArtifactType.Dataset;
                case "Dataflow":
                    return ArtifactType.Dataflow;
                case "PersonalGroup":
                    return ArtifactType.PersonalGroup;
                case "Group":
                    return ArtifactType.Group;
                case "Workspace":
                    return ArtifactType.Workspace;
                case "Capacity":
                    return ArtifactType.Capacity;
                case "App":
                    return ArtifactType.App;
            }
            return null;
        }
    }
}
