// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for DatamartType.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(DatamartTypeConverter))]
    public struct DatamartType : System.IEquatable<DatamartType>
    {
        private DatamartType(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// The datamart type was unset
        /// </summary>
        public static readonly DatamartType Unset = "Unset";

        /// <summary>
        /// The datamart has no type
        /// </summary>
        public static readonly DatamartType Ignore = "Ignore";

        /// <summary>
        /// The datamart is of Sql type
        /// </summary>
        public static readonly DatamartType Sql = "Sql";

        /// <summary>
        /// The datamart is of Lakehouse type
        /// </summary>
        public static readonly DatamartType Lakehouse = "Lakehouse";

        /// <summary>
        /// The datamart is of Dataverse type
        /// </summary>
        public static readonly DatamartType Dataverse = "Dataverse";

        /// <summary>
        /// The datamart is of Datawarehouse type
        /// </summary>
        public static readonly DatamartType Datawarehouse = "Datawarehouse";


        /// <summary>
        /// Underlying value of enum DatamartType
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for DatamartType
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type DatamartType
        /// </summary>
        public bool Equals(DatamartType e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to DatamartType
        /// </summary>
        public static implicit operator DatamartType(string value)
        {
            return new DatamartType(value);
        }

        /// <summary>
        /// Implicit operator to convert DatamartType to string
        /// </summary>
        public static implicit operator string(DatamartType e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum DatamartType
        /// </summary>
        public static bool operator == (DatamartType e1, DatamartType e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum DatamartType
        /// </summary>
        public static bool operator != (DatamartType e1, DatamartType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for DatamartType
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is DatamartType && Equals((DatamartType)obj);
        }

        /// <summary>
        /// Returns for hashCode DatamartType
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
