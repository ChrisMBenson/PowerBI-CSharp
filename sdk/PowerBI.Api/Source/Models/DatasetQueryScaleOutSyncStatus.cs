// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Dataset query scale-out sync status
    /// </summary>
    public partial class DatasetQueryScaleOutSyncStatus
    {
        /// <summary>
        /// Initializes a new instance of the DatasetQueryScaleOutSyncStatus
        /// class.
        /// </summary>
        public DatasetQueryScaleOutSyncStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatasetQueryScaleOutSyncStatus
        /// class.
        /// </summary>
        /// <param name="commitVersion">Latest commit version</param>
        /// <param name="commitTimestamp">Timestamp indicating the latest
        /// commit version</param>
        /// <param name="targetSyncVersion">Target sync version</param>
        /// <param name="targetSyncTimestamp">Timestamp indicating the target
        /// sync version</param>
        /// <param name="triggerReason">Query scale-out sync trigger reason.
        /// Possible values include: 'explicit', 'automatic', 'system'</param>
        /// <param name="syncStartTime">Timestamp indicating when last sync
        /// started</param>
        /// <param name="syncEndTime">Timestamp indicating when last sync
        /// ended</param>
        /// <param name="minActiveReadVersion">Minimum active read
        /// version</param>
        /// <param name="minActiveReadTimestamp">Timestamp indicating the
        /// minimum active read version</param>
        /// <param name="scaleOutStatus">Query scale-out status. Possible
        /// values include: 'Enabled', 'TenantSettingDisabled',
        /// 'StorageModeNotSupported', 'ReadOnlyReplicasDisabled'</param>
        public DatasetQueryScaleOutSyncStatus(long? commitVersion = default(long?), System.DateTime? commitTimestamp = default(System.DateTime?), long? targetSyncVersion = default(long?), System.DateTime? targetSyncTimestamp = default(System.DateTime?), string triggerReason = default(string), System.DateTime? syncStartTime = default(System.DateTime?), System.DateTime? syncEndTime = default(System.DateTime?), long? minActiveReadVersion = default(long?), System.DateTime? minActiveReadTimestamp = default(System.DateTime?), string scaleOutStatus = default(string))
        {
            CommitVersion = commitVersion;
            CommitTimestamp = commitTimestamp;
            TargetSyncVersion = targetSyncVersion;
            TargetSyncTimestamp = targetSyncTimestamp;
            TriggerReason = triggerReason;
            SyncStartTime = syncStartTime;
            SyncEndTime = syncEndTime;
            MinActiveReadVersion = minActiveReadVersion;
            MinActiveReadTimestamp = minActiveReadTimestamp;
            ScaleOutStatus = scaleOutStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets latest commit version
        /// </summary>
        [JsonProperty(PropertyName = "commitVersion")]
        public long? CommitVersion { get; set; }

        /// <summary>
        /// Gets or sets timestamp indicating the latest commit version
        /// </summary>
        [JsonProperty(PropertyName = "commitTimestamp")]
        public System.DateTime? CommitTimestamp { get; set; }

        /// <summary>
        /// Gets or sets target sync version
        /// </summary>
        [JsonProperty(PropertyName = "targetSyncVersion")]
        public long? TargetSyncVersion { get; set; }

        /// <summary>
        /// Gets or sets timestamp indicating the target sync version
        /// </summary>
        [JsonProperty(PropertyName = "targetSyncTimestamp")]
        public System.DateTime? TargetSyncTimestamp { get; set; }

        /// <summary>
        /// Gets or sets query scale-out sync trigger reason. Possible values
        /// include: 'explicit', 'automatic', 'system'
        /// </summary>
        [JsonProperty(PropertyName = "triggerReason")]
        public string TriggerReason { get; set; }

        /// <summary>
        /// Gets or sets timestamp indicating when last sync started
        /// </summary>
        [JsonProperty(PropertyName = "syncStartTime")]
        public System.DateTime? SyncStartTime { get; set; }

        /// <summary>
        /// Gets or sets timestamp indicating when last sync ended
        /// </summary>
        [JsonProperty(PropertyName = "syncEndTime")]
        public System.DateTime? SyncEndTime { get; set; }

        /// <summary>
        /// Gets or sets minimum active read version
        /// </summary>
        [JsonProperty(PropertyName = "minActiveReadVersion")]
        public long? MinActiveReadVersion { get; set; }

        /// <summary>
        /// Gets or sets timestamp indicating the minimum active read version
        /// </summary>
        [JsonProperty(PropertyName = "minActiveReadTimestamp")]
        public System.DateTime? MinActiveReadTimestamp { get; set; }

        /// <summary>
        /// Gets or sets query scale-out status. Possible values include:
        /// 'Enabled', 'TenantSettingDisabled', 'StorageModeNotSupported',
        /// 'ReadOnlyReplicasDisabled'
        /// </summary>
        [JsonProperty(PropertyName = "scaleOutStatus")]
        public string ScaleOutStatus { get; set; }

    }
}
