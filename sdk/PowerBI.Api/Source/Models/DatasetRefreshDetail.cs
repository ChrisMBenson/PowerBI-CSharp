// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A Power BI refresh detail entry
    /// </summary>
    public partial class DatasetRefreshDetail
    {
        /// <summary>
        /// Initializes a new instance of the DatasetRefreshDetail class.
        /// </summary>
        public DatasetRefreshDetail()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatasetRefreshDetail class.
        /// </summary>
        /// <param name="startTime">The start date and time of the
        /// refresh</param>
        /// <param name="endTime">The end date and time of the refresh (may be
        /// empty if a refresh is in progress)</param>
        /// <param name="type">The type of processing to perform. Possible
        /// values include: 'Full', 'ClearValues', 'Calculate', 'DataOnly',
        /// 'Automatic', 'Defragment'</param>
        /// <param name="commitMode">Determines if objects will be committed in
        /// batches or only when complete. Possible values include:
        /// 'Transactional', 'PartialBatch'</param>
        /// <param name="status">Dataset operation general status. Possible
        /// values include: 'Unknown', 'Completed', 'Failed',
        /// 'Disabled'</param>
        /// <param name="extendedStatus">Dataset operation detailed status.
        /// Possible values include: 'Unknown', 'NotStarted', 'InProgress',
        /// 'Completed', 'TimedOut', 'Failed', 'Disabled', 'Cancelled'</param>
        /// <param name="currentRefreshType">The type of processing for the
        /// current iteration. This is useful when `commitMode` is set to
        /// `PartialBatch`. Possible values include: 'Full', 'ClearValues',
        /// 'Calculate', 'DataOnly', 'Automatic', 'Defragment'</param>
        /// <param name="numberOfAttempts">The number of attempts for the
        /// refresh request</param>
        /// <param name="objects">An array of objects included in the refresh
        /// request</param>
        /// <param name="messages">An array of engine error or warning messages
        /// for the refresh request</param>
        public DatasetRefreshDetail(System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), string type = default(string), string commitMode = default(string), string status = default(string), string extendedStatus = default(string), string currentRefreshType = default(string), int? numberOfAttempts = default(int?), IList<DatasetRefreshObjects> objects = default(IList<DatasetRefreshObjects>), IList<EngineMessage> messages = default(IList<EngineMessage>))
        {
            StartTime = startTime;
            EndTime = endTime;
            Type = type;
            CommitMode = commitMode;
            Status = status;
            ExtendedStatus = extendedStatus;
            CurrentRefreshType = currentRefreshType;
            NumberOfAttempts = numberOfAttempts;
            Objects = objects;
            Messages = messages;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the start date and time of the refresh
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; set; }

        /// <summary>
        /// Gets or sets the end date and time of the refresh (may be empty if
        /// a refresh is in progress)
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime { get; set; }

        /// <summary>
        /// Gets or sets the type of processing to perform. Possible values
        /// include: 'Full', 'ClearValues', 'Calculate', 'DataOnly',
        /// 'Automatic', 'Defragment'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets determines if objects will be committed in batches or
        /// only when complete. Possible values include: 'Transactional',
        /// 'PartialBatch'
        /// </summary>
        [JsonProperty(PropertyName = "commitMode")]
        public string CommitMode { get; set; }

        /// <summary>
        /// Gets or sets dataset operation general status. Possible values
        /// include: 'Unknown', 'Completed', 'Failed', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets dataset operation detailed status. Possible values
        /// include: 'Unknown', 'NotStarted', 'InProgress', 'Completed',
        /// 'TimedOut', 'Failed', 'Disabled', 'Cancelled'
        /// </summary>
        [JsonProperty(PropertyName = "extendedStatus")]
        public string ExtendedStatus { get; set; }

        /// <summary>
        /// Gets or sets the type of processing for the current iteration. This
        /// is useful when `commitMode` is set to `PartialBatch`. Possible
        /// values include: 'Full', 'ClearValues', 'Calculate', 'DataOnly',
        /// 'Automatic', 'Defragment'
        /// </summary>
        [JsonProperty(PropertyName = "currentRefreshType")]
        public string CurrentRefreshType { get; set; }

        /// <summary>
        /// Gets or sets the number of attempts for the refresh request
        /// </summary>
        [JsonProperty(PropertyName = "numberOfAttempts")]
        public int? NumberOfAttempts { get; set; }

        /// <summary>
        /// Gets or sets an array of objects included in the refresh request
        /// </summary>
        [JsonProperty(PropertyName = "objects")]
        public IList<DatasetRefreshObjects> Objects { get; set; }

        /// <summary>
        /// Gets or sets an array of engine error or warning messages for the
        /// refresh request
        /// </summary>
        [JsonProperty(PropertyName = "messages")]
        public IList<EngineMessage> Messages { get; set; }

    }
}
